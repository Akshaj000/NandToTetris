<tokens>
<keyword> while <keyword>
<symbol> ( <symbol>
<integerConstant> 2 <integerConstant>
<symbol> &gt; <symbol>
<integerConstant> 5 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> while <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 0 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 3 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> if <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 81 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> exit <identifier>
<symbol> = <symbol>
<keyword> true <keyword>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> if <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 131 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> direction <identifier>
<symbol> = <symbol>
<integerConstant> 1 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> while <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 1 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 2 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> if <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 133 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> direction <identifier>
<symbol> = <symbol>
<integerConstant> 2 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> if <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 130 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> direction <identifier>
<symbol> = <symbol>
<integerConstant> 3 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<keyword> if <keyword>
<symbol> ( <symbol>
<identifier> key <identifier>
<symbol> = <symbol>
<integerConstant> 132 <integerConstant>
<symbol> ) <symbol>
<symbol> { <symbol>
<keyword> let <keyword>
<identifier> direction <identifier>
<symbol> = <symbol>
<integerConstant> 4 <integerConstant>
<symbol> ; <symbol>
<symbol> } <symbol>
<symbol> } <symbol>
</tokens>